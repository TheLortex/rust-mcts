var searchIndex={};
searchIndex["evaluate"] = {"doc":"EVALUATE - compare policies on a two-player game.","i":[[5,"game_match","evaluate","",null,[[["dynmultiplayerpolicybuilder",8],["dynmultiplayerpolicybuilder",8],["box",3],["box",3]]]],[5,"main","","",null,[[]]],[5,"run","","",null,[[]]],[5,"next","","",null,[[["argmatches",3],["config",3]]]],[6,"Result","","",null,null]],"p":[]};
searchIndex["generate"] = {"doc":"GENERATE - self-play games generator.","i":[[5,"main","generate","",null,[[]]],[5,"run","","",null,[[]]],[5,"run_generator","","",null,[[["gamebuilder",8],["method",4],["config",3]]]],[6,"Result","","",null,null]],"p":[]};
searchIndex["ggpf"] = {"doc":"General Game Playing Framework.","i":[[0,"deep","ggpf","Features for neural network-based policies.",null,null],[0,"evaluator","ggpf::deep","Neural networks evaluators.",null,null],[5,"prediction","ggpf::deep::evaluator","Prediction evaluator",null,[[["predictionevaluatorchannel",6],["sender",3]]]],[5,"representation","","Representation evaluator",null,[[["sender",3],["representationevaluatorchannel",6],["array",6]]]],[5,"dynamics","","Dynamics evaluator",null,[[["dynamicsevaluatorchannel",6],["sender",3],["array",6],["array",6]]]],[5,"prediction_task","","Prediction task",null,[[["arc",3],["receiver",3],["predictionevaluatorchannel",6],["arc",3],["option",4]]]],[5,"dynamics_task","","Dynamics task",null,[[["arc",3],["receiver",3],["dynamicsevaluatorchannel",6]]]],[5,"representation_task","","Representation task",null,[[["arc",3],["representationevaluatorchannel",6],["receiver",3]]]],[5,"prediction_evaluator_single","","Evaluates a game state for PUCT - single batch",null,[[["session",3],["graph",3]]]],[5,"dynamics_evaluator_single","","Dynamics evaluator - single batch",null,[[["array",6],["array",6],["graph",3],["session",3],["dimension",8]],[["dynamicsnetworkoutput",3],["dimension",8]]]],[5,"representation_evaluator_single","","State to representation for Muz - single batch",null,[[["array",6],["graph",3],["session",3],["dimension",8]],[["array",6],["dimension",8]]]],[6,"PredictionEvaluatorChannel","","Takes a tensor and a way to send back the inference result…",null,null],[6,"RepresentationEvaluatorChannel","","Takes a tensor and a way to send back the inference result…",null,null],[6,"DynamicsEvaluatorChannel","","Takes a tensor and a way to send back the inference result…",null,null],[0,"file_manager","ggpf::deep","File output channel.",null,null],[3,"FileManager","ggpf::deep::file_manager","File manager.",null,null],[5,"watch_model","","Watch a path for changes and reload the model when content…",null,[[["arc",3]]]],[11,"new","","Instanciate file manager on given file.",0,[[]]],[11,"append","","Add a new game history entry to file.",0,[[["features",8],["gamehistoryentry",3]]]],[0,"self_play","ggpf::deep","Self-play generation.",null,null],[3,"GameHistoryEntry","ggpf::deep::self_play","Game history data generated from self-play",null,null],[12,"state","","List of board states, except for the final state.",1,null],[12,"policy","","MCTS exploration statistics for the root node of the…",1,null],[12,"action","","One-hot encoding of the action taken by the policy.",1,null],[12,"value","","Value estimation of the root node.",1,null],[12,"reward","","Reward obtained after performing the action.",1,null],[12,"turn","","Whose turn.",1,null],[5,"muzero_game_generator","","MuZero self-play games generator Spawn several tasks…",null,[[["muzeroconfig",3],["gamehistoryentry",3],["sender",3],["selfplay",3]]]],[5,"alphazero_game_generator","","AlphaZero self-play games generator",null,[[["gamehistoryentry",3],["alphazeroconfig",3],["sender",3],["selfplay",3]]]],[0,"tf","ggpf::deep","TensorFlow helpers.",null,null],[5,"support_to_value","ggpf::deep::tf","Converts a suport encoding of scalar to the corresponding…",null,[[["tensor",3]],["tensor",3]]],[5,"call_prediction","","Use prediction network inference.",null,[[["tensor",3],["session",3],["graph",3]]]],[5,"call_dynamics","","Use dynamics network inference.",null,[[["tensor",3],["graph",3],["session",3]]]],[5,"call_representation","","Use representation network inference.",null,[[["tensor",3],["session",3],["graph",3]],["tensor",3]]],[5,"load_model","","Load a tensorflow model into a session.",null,[[]]],[6,"ThreadSafeModel","","Access to a TF model behind Arc and RwLock the AtomicBool…",null,null],[0,"game","ggpf","General game traits and implementations.",null,null],[3,"NoFeatures","ggpf::game","A move encoder that doesn't take into account the board…",null,null],[5,"simulate","","Simulate a match by executing the two policies on a given…",null,[[["box",3],["multiplayerpolicy",8],["multiplayerpolicy",8],["box",3]]]],[0,"breakthrough","","Breakthrough game implementation",null,null],[3,"Move","ggpf::game::breakthrough","Move",null,null],[12,"color","","Player",2,null],[12,"x","","Current position x",2,null],[12,"y","","Current position y",2,null],[12,"direction","","Move direction",2,null],[3,"Breakthrough","","Breakthrough game state instance",null,null],[3,"BreakthroughBuilder","","Game builder for Breakthough.",null,null],[12,"size","","Board size.",3,null],[4,"Color","","Players",null,null],[13,"Black","","Black",4,null],[13,"White","","White",4,null],[4,"Cell","","Game cell",null,null],[13,"Empty","","Empty cell.",5,null],[13,"C","","Cell containing a pawn of given color.",5,null],[4,"MoveDirection","","Move direction",null,null],[13,"Front","","Front",6,null],[13,"FrontLeft","","Front left",6,null],[13,"FrontRight","","Front right",6,null],[0,"ui","","Breakthrough interactive interface.",null,null],[3,"IBreakthrough","ggpf::game::breakthrough::ui","Interactive interface for Breakthrough",null,null],[11,"new","","Instanciates a view with given state.",7,[[["breakthrough",3]]]],[11,"adv","ggpf::game::breakthrough","Returns the adversary of the player.",4,[[],["color",4]]],[11,"random","","Returns a random player.",4,[[],["color",4]]],[11,"name","","Write a human readable name for the move.",2,[[],["string",3]]],[11,"target","","Compute move target.",2,[[]]],[11,"is_valid","","Check if move is valid on the given board.",2,[[["cell",4],["arrayview",6],["ix2",6]],["option",4]]],[11,"show","","Prints a nice representation of the board.",8,[[]]],[0,"hashcode_20","ggpf::game","Google Hashcode 2020 problem.",null,null],[3,"Hashcode20Settings","ggpf::game::hashcode_20","Hashcode 2020 game settings",null,null],[3,"Hashcode20","","Hashcode 2020 Game",null,null],[4,"Move","","Possible actions",null,null],[13,"Signup","","Signup a library.",9,null],[13,"Scan","","Scan a book in a library.",9,null],[13,"Skip","","Finish the day.",9,null],[11,"new_from_file","","Create a game settings instance given its file description.",10,[[],["hashcode20settings",3]]],[0,"meta","ggpf::game","Games that takes other games as an input.",null,null],[0,"simulated","ggpf::game::meta","Simulation of a game",null,null],[3,"DynamicsNetworkOutput","ggpf::game::meta::simulated","Output from the dynamics network.",null,null],[12,"reward","","Predicted reward.",11,null],[12,"repr_state","","Predicted next state.",11,null],[3,"Simulated","","Simulated game",null,null],[11,"new","","Instanciate a new simulated game.",12,[[["ix3",6],["vec",3],["dynamicsevaluatorchannel",6],["sender",3],["array",6]]]],[0,"with_history","ggpf::game::meta","Wrapping a game with its history",null,null],[3,"WithHistory","ggpf::game::meta::with_history","A game with its history.",null,null],[12,"state","","Current game state.",13,null],[3,"WithHistoryGB","","Builder for a game with history.",null,null],[3,"IWithHistory","","Interface wrapper for WithHistory.",null,null],[11,"new","","Creates a game builder with history, given a correspond…",14,[[]]],[11,"new","","Wraps a game view for a with history game.",15,[[]]],[0,"misere_breakthrough","ggpf::game","Misère breakthrough",null,null],[3,"MisereBreakthrough","ggpf::game::misere_breakthrough","Misère breakthrough",null,null],[11,"show","","Show game state",16,[[]]],[0,"openai","ggpf::game","Open AI Gym interface.",null,null],[3,"Gym","ggpf::game::openai","OpenAI Gym game instance.",null,null],[3,"GymBuilder","","Builder for Gym games.",null,null],[12,"address","","Executor remote address.",17,null],[12,"game_name","","Gym game name.",17,null],[12,"render","","Whether the game should be rendered.",17,null],[11,"new","","Given a connected client, build a game based on Gym.",18,[[["gymrunnerclient",3],["string",3]]]],[0,"weak_schur","ggpf::game","Weak schur number.",null,null],[3,"WeakSchurNumber","ggpf::game::weak_schur","Weak schur number game.",null,null],[3,"WeakSchurNumberBuilder","","Weak schur number game builder",null,null],[8,"Base","ggpf::game","Common interface for single and multiplayer games",null,null],[16,"Move","","The type for a Move.",19,null],[10,"possible_moves","","Given the game state and turn, list possible actions to…",19,[[],["vec",3]]],[11,"is_finished","","Returns if the game has ended or not.",19,[[]]],[8,"Playable","","Mutable game by playing moves.",null,null],[10,"play","","Mutates game state playing the given action. Yields a…",20,[[],[["pin",3],["box",3]]]],[11,"random_move","","Plays a random move. Yields a reward.",20,[[],[["pin",3],["box",3]]]],[8,"Game","","Game with one or multiple players.",null,null],[16,"Player","","The type representing each player.",21,null],[10,"player_after","","Assuming a static player order, returns who should play…",21,[[]]],[10,"players","","Returns the list of players for the game.",21,[[],["vec",3]]],[10,"turn","","Returns whose turn it is.",21,[[]]],[8,"Playout","","Game playouts",null,null],[11,"playout_history","","Simulate a game execution using random moves until…",22,[[],[["pin",3],["box",3]]]],[11,"playout_board","","Simulates a game execution using random moves until…",22,[[],[["box",3],["pin",3]]]],[8,"SingleWinner","","Non-cooperative games.",null,null],[10,"winner","","Returns the winner of the game, or None if no one has won…",23,[[],["option",4]]],[8,"Singleplayer","","Single-player games.",null,null],[8,"GameBuilder","","Game builders.",null,null],[16,"G","","The built game.",24,null],[10,"create","","Create a new game starting for player `starting`.",24,[[],[["pin",3],["box",3]]]],[8,"SingleplayerGameBuilder","","Builders for single-player games.",null,null],[16,"G","","The built game.",25,null],[10,"create","","Create a new single-player game instance.",25,[[],[["pin",3],["box",3]]]],[8,"Features","","Games that can be represented as multi-dimensional arrays.",null,null],[16,"StateDim","","Type dimension of the game state feature space.",26,null],[16,"ActionDim","","Type dimension of the action feature space.",26,null],[16,"Descriptor","","Game features descriptor, that can be used to retrieve…",26,null],[10,"get_features","","Obtain game descriptor.",26,[[]]],[10,"state_dimension","","Deduce state shape from game descriptor.",26,[[]]],[10,"action_dimension","","Deduce action shape from game descriptor.",26,[[]]],[10,"state_to_feature","","Converts the game state to features (multi-dimensional…",26,[[],["array",6]]],[10,"moves_to_feature","","Converts an action probability distribution to the action…",26,[[["hashmap",3]],["array",6]]],[11,"move_to_feature","","Converts a single move to a one-hot feature encoding of…",26,[[],["array",6]]],[10,"feature_to_moves","","Converts a move distribution feature to the corresponding…",26,[[["array",6]],["hashmap",3]]],[10,"all_possible_moves","","Returns action space",26,[[],["vec",3]]],[10,"all_feature_to_moves","","Converts a move distribution feature to the corresponding…",26,[[["array",6]],["hashmap",3]]],[8,"MoveCode","","Move encoders",null,null],[10,"code","","Encode a move given the current state.",27,[[]]],[8,"GameView","","Games with an user interface.",null,null],[16,"G","","Interfaced game type",28,null],[10,"set_state","","Set UI game state.",28,[[]]],[25,"MoveTrait","","Action that may be applied to a game state.",null,null],[0,"policies","ggpf","General policy traits and implementations.",null,null],[5,"get_multi","ggpf::policies","Dynamically map policy names to policy builder instances.",null,[[["config",3]],[["dynmultiplayerpolicybuilder",8],["box",3]]]],[0,"flat","","Policies that doesn't perform any tree search.",null,null],[3,"RandomPolicy","ggpf::policies::flat","Random policy",null,null],[3,"Random","","Random policy builder.",null,null],[3,"FlatMonteCarloPolicy","","Flat Monte Carlo policy",null,null],[3,"FlatUCBMonteCarloPolicy","","Flat Monte Carlo with UCB policy",null,null],[0,"mcts","ggpf::policies","Monte-Carlo Tree Search (MCTS) based policies.",null,null],[3,"MCTSTreeNode","ggpf::policies::mcts","MCTS tree node.",null,null],[12,"parent","","Node parent",29,null],[12,"moves","","List of explored children",29,null],[12,"info","","Node information",29,null],[3,"MCTSNode","","Node information",null,null],[12,"state","","Node state.",30,null],[12,"reward","","Reward when arriving in this node state, from parent.",30,null],[12,"node","","Additional node statistics, policy-specific.",30,null],[12,"moves","","Additional moves statistics, policy-specific.",30,null],[3,"WithMCTSPolicy","","Wrapper for MCTS policy.",null,null],[12,"base_mcts","","Structure that handle MCTS business logic.",31,null],[12,"root","","Root node from the last exploration. Can be taken to…",31,null],[0,"muz","","MuZero policy.",null,null],[3,"MuzPolicy","ggpf::policies::mcts::muz","MuZero policy",null,null],[12,"mcts","","PUCT policy instance. Can be taken to gather statistics.",32,null],[3,"MuzEvaluatorChannels","","Channels that can be used to request inferences from…",null,null],[12,"prediction","","Evaluator for the prediction network.",33,null],[12,"representation","","Evaluator for the representation network.",33,null],[12,"dynamics","","Evaluator for the dynamics network.",33,null],[3,"Muz","","MuZero policy builder.",null,null],[12,"n_playouts","","Number of PUCT playouts per move.",34,null],[12,"muz","","Muz settings.",34,null],[12,"channels","","Evaluation channels",34,null],[3,"MuZeroConfig","","Global configuration for MuZero setup.",null,null],[12,"n_playouts","","Number of playouts for search.",35,null],[12,"muz","","Settings for PUCT search.",35,null],[12,"networks_path","","Models base directory location.",35,null],[12,"board_shape","","Board space dimensions.",35,null],[12,"action_shape","","Action shape dimensions.",35,null],[12,"watch_models","","Watch model for update.",35,null],[12,"batch_size","","GPU batch size.",35,null],[3,"MuzEvaluators","","Structure that manages the tensorflow models and the…",null,null],[11,"new","","Create a new evaluator manager, loading the models and…",36,[[["muzeroconfig",3]],["muzevaluators",3]]],[11,"get_channels","","Get evaluation requests sender channels to give to Muz.…",36,[[],["muzevaluatorchannels",3]]],[0,"puct","ggpf::policies::mcts","PUCT policy.",null,null],[3,"PUCTMoveInfo","ggpf::policies::mcts::puct","PUCT move statistics.",null,null],[12,"Q","","Value (expected discounted reward for move, relative to…",37,null],[12,"N_a","","Number of times the move has been explored.",37,null],[12,"pi","","Move policy as predicted by the network.",37,null],[12,"reward","","Immediate reward yielded by move.",37,null],[3,"PUCTNodeInfo","","PUCT node statistics.",null,null],[12,"count","","Node visit count.",38,null],[3,"PUCTPolicy_","","PUCT policy.",null,null],[12,"min_tree","","Minimum Q value encountered in the tree.",39,null],[12,"max_tree","","Maximum Q value encountered in the tree.",39,null],[3,"PUCT","","PUCT policy builder",null,null],[12,"config","","PUCT configuration.",40,null],[12,"n_playouts","","Number of playouts.",40,null],[12,"prediction_channel","","State evaluation function.",40,null],[3,"AlphaZeroConfig","","Global configuration for AlphaZero setup.",null,null],[12,"n_playouts","","Number of playouts for search.",41,null],[12,"puct","","Settings for PUCT search.",41,null],[12,"network_path","","Model directory location.",41,null],[12,"board_shape","","Board space dimensions.",41,null],[12,"action_shape","","Action shape dimensions.",41,null],[12,"watch_models","","Watch model for update.",41,null],[12,"batch_size","","GPU batch size.",41,null],[3,"AlphaZeroEvaluators","","Structure that manages the tensorflow model and the…",null,null],[6,"PUCTPolicy","","PUCT policy built from MCTS description.",null,null],[11,"normalize","","Normalize Q value according to minimum and maximum values.",39,[[]]],[11,"new","","Create a new evaluator manager, loading the models and…",42,[[["alphazeroconfig",3]]]],[11,"get_channel","","Get evaluation requests sender channel to give to PUCT.…",42,[[],[["predictionevaluatorchannel",6],["sender",3]]]],[25,"Evaluator","","The game state evaluator",null,null],[0,"rave","ggpf::policies::mcts","RAVE policy.",null,null],[3,"RAVEMoveInfo","ggpf::policies::mcts::rave","RAVE move statistics.",null,null],[3,"RAVENodeInfo","","RAVE node statistics.",null,null],[3,"RAVEPolicy_","","RAVE policy description.",null,null],[6,"RAVEPolicy","","RAVE policy built from MCTS description.",null,null],[0,"uct","ggpf::policies::mcts","UCT policy.",null,null],[3,"UCTMoveInfo","ggpf::policies::mcts::uct","UCT move information.",null,null],[12,"Q","","Node value.",43,null],[12,"N_a","","Number of times visited.",43,null],[3,"UCTNodeInfo","","UCT node information.",null,null],[12,"count","","Number of times visited",44,null],[3,"UCTPolicy_","","UCT policy description.",null,null],[6,"UCTPolicy","","UCT policy as an MCTS policy.",null,null],[6,"MCTSNodeParent","ggpf::policies::mcts","Link from child node to parent node.",null,null],[6,"MCTSNodeChild","","Strong reference to an MCTS tree.",null,null],[8,"BaseMCTSPolicy","","Interface used to write a policy as an MCTS policy.",null,null],[16,"NodeInfo","","Additional node statistics.",45,null],[16,"MoveInfo","","Additional move statistics.",45,null],[16,"PlayoutInfo","","Informations generated by a playout.",45,null],[10,"get_value","","Get value associated to a node.",45,[[]]],[10,"default_node","","Default node statistics for a given state.",45,[[]]],[10,"default_move","","Default move statistics for a given state.",45,[[]]],[10,"backpropagate","","Backpropagate playout information.",45,[[["mctsnodechild",6]]]],[10,"simulate","","Generate playout information starting from board.",45,[[],[["pin",3],["box",3]]]],[11,"new","","Instanciate a new MCTS policy, given a BaseMCTS instance.",31,[[]]],[25,"MCTSGame","","",null,null],[0,"nmcs","ggpf::policies","Nested Monte-Carlo Search policy.",null,null],[3,"NMCSPolicy","ggpf::policies::nmcs","Nested Monte Carlo Search",null,null],[3,"NMCS","","Nested Monte Carlo Search policy builder.",null,null],[3,"MultiNMCSPolicy","","Multiplayer NMCS",null,null],[3,"MultiNMCS","","Multiplayer NMCS policy builder.",null,null],[0,"nrpa","ggpf::policies","Nested Rollout Policy Adaptation.",null,null],[3,"NRPAPolicy","ggpf::policies::nrpa","Nested Rollout Policy Adaptation",null,null],[3,"NRPA","","Nested Rollout Policy Adaptation policy builder.",null,null],[11,"new","","Instanciate a new policy builder for NRPA",46,[[]]],[0,"ppa","ggpf::policies","Playout Policy Adaptation.",null,null],[3,"PPAPolicy","ggpf::policies::ppa","PPA policy instance.",null,null],[3,"PPA","","Playout Policy Adaptation policy builder.",null,null],[12,"config","","PPA settings.",47,null],[12,"_m","","PhantomData, storing move encoder type information.",47,null],[12,"_g","","PhantomData, storing game type information.",47,null],[11,"new","","Create a new PPA policy builder.",47,[[["ppa",3]]]],[8,"MultiplayerPolicy","ggpf::policies","A static policy.",null,null],[10,"play","","Chooses the next action given the current game state.",48,[[],[["box",3],["pin",3]]]],[8,"MultiplayerPolicyBuilder","","A static policy builder.",null,null],[16,"P","","Created policy type.",49,null],[10,"create","","Initializes a new policy instance for player `color`.",49,[[]]],[8,"DynMultiplayerPolicyBuilder","","A dynamic policy builder.",null,null],[10,"create","","Initializes a new policy instance for player `color`, but…",50,[[],[["box",3],["multiplayerpolicy",8]]]],[8,"SingleplayerPolicyBuilder","","Single-player policy builder.",null,null],[16,"P","","Single player policy type.",51,null],[10,"create","","Initializes a new policy instance for the single-player…",51,[[]]],[8,"SingleplayerPolicy","","Single-player policy.",null,null],[10,"solve","","Plans the sequence of moves to finish the game.",52,[[],[["pin",3],["box",3]]]],[0,"settings","ggpf","General game and playout settings.",null,null],[3,"SelfPlay","ggpf::settings","Self-play settings.",null,null],[12,"batch_size","","GPU batch size.",53,null],[12,"evaluators","","Number of evaluators: tasks that send batches to GPUs.",53,null],[12,"generators","","Number of generators: tasks that generate games.",53,null],[3,"MCTS","","MCTS-based policies settings.",null,null],[12,"playouts","","Number of playouts per turn.",54,null],[3,"RAVE","","RAVE settings.",null,null],[12,"uct_weight","","UCT weight.",55,null],[12,"playouts","","Number of playouts per turn.",55,null],[3,"UCT","","UCT settings.",null,null],[12,"uct_weight","","UCT weight.",56,null],[12,"playouts","","Number of playouts per turn.",56,null],[3,"FlatUCBMonteCarlo","","Flat UCB Monte Carlo settings.",null,null],[12,"playouts","","Number of playouts per turn.",57,null],[12,"ucb_weight","","UCB weight",57,null],[3,"FlatMonteCarlo","","Flat Monte Carlo settings.",null,null],[12,"playouts","","Number of playouts per turn.",58,null],[3,"PPA","","PPA settings.",null,null],[12,"uct_weight","","Weight for UCT formula.",59,null],[12,"playouts","","Total number of playouts at each step.",59,null],[12,"alpha","","α value used in policy gradient.",59,null],[3,"Policies","","Policies settings node.",null,null],[12,"rave","","RAVE settings",60,null],[12,"ppa","","PPA settings",60,null],[12,"flat","","Flat Monte Carlo settings",60,null],[12,"flat_ucb","","Flat UCB Monte Carlo settings",60,null],[12,"uct","","UCT settings",60,null],[3,"PUCT","","PUCT settings.",null,null],[12,"discount","","Reward discount value.",61,null],[12,"c_base","","PUCT formula base. (see Deepmind's paper)",61,null],[12,"c_init","","PUCT formula init. (bis)",61,null],[12,"root_dirichlet_alpha","","Root exploration alpha.",61,null],[12,"root_exploration_fraction","","Root exploration fraction.",61,null],[12,"value_support","","Value support encoding.",61,null],[3,"AlphaZero","","AlphaZero settings.",null,null],[12,"puct","","Underlying PUCT policy.",62,null],[3,"MuZero","","MuZero settings.",null,null],[12,"puct","","Underlying PUCT policy.",63,null],[12,"reward_support","","Reward support encoding.",63,null],[12,"repr_shape","","Representation board shape.",63,null],[12,"unroll_steps","","Number of unroll steps when training.",63,null],[12,"td_steps","","Temporal-difference steps when training.",63,null],[3,"Config","","Global configuration.",null,null],[12,"game","","Game settings.",64,null],[12,"self_play","","Self-play settings.",64,null],[12,"mcts","","MCTS settings.",64,null],[12,"alpha","","AlphaZero settings.",64,null],[12,"mu","","MuZero settings.",64,null],[12,"policies","","Policies settings.",64,null],[3,"StrError","","Simple error wrapper.",null,null],[12,"0","","",65,null],[4,"Game","","Possible games and their associated options.",null,null],[13,"Breakthrough","","Breakthrough",66,null],[12,"history","ggpf::settings::Game","History length.",67,null],[12,"size","","Board size.",67,null],[13,"Gym","ggpf::settings","OpenAI Gym",66,null],[12,"history","ggpf::settings::Game","History length.",68,null],[12,"name","","Gym game name.",68,null],[12,"remote","","Gym executor remote address.",68,null],[4,"Method","ggpf::settings","Training methods.",null,null],[13,"MuZero","","MuZero",69,null],[13,"AlphaZero","","AlphaZero",69,null],[11,"name","","Game display name.",66,[[],["string",3]]],[11,"history","","Get history for game.",66,[[],["option",4]]],[11,"get_alphazero","","Build an AlphaZeroConfig from the global configuration if…",64,[[],[["option",4],["alphazeroconfig",3]]]],[11,"get_muzero","","Build a MuZeroConfig from the global configuration if…",64,[[],[["option",4],["muzeroconfig",3]]]],[11,"name","","Display name for method.",69,[[]]],[11,"from","ggpf::deep::file_manager","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from_py","","",0,[[["python",3]]]],[11,"into_py","","",0,[[["python",3]]]],[11,"from","ggpf::deep::self_play","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from_py","","",1,[[["python",3]]]],[11,"into_py","","",1,[[["python",3]]]],[11,"from","ggpf::game","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from_py","","",70,[[["python",3]]]],[11,"into_py","","",70,[[["python",3]]]],[11,"from","ggpf::game::breakthrough","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from_py","","",2,[[["python",3]]]],[11,"into_py","","",2,[[["python",3]]]],[11,"players","","",8,[[],["vec",3]]],[11,"player_after","","",8,[[]]],[11,"turn","","",8,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from_py","","",8,[[["python",3]]]],[11,"into_py","","",8,[[["python",3]]]],[11,"create","","",3,[[],[["box",3],["pin",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from_py","","",3,[[["python",3]]]],[11,"into_py","","",3,[[["python",3]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from_py","","",4,[[["python",3]]]],[11,"into_py","","",4,[[["python",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from_py","","",5,[[["python",3]]]],[11,"into_py","","",5,[[["python",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from_py","","",6,[[["python",3]]]],[11,"into_py","","",6,[[["python",3]]]],[11,"from","ggpf::game::breakthrough::ui","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"call_on","","",7,[[["selector",4]],["option",4]]],[11,"draw","","",7,[[["printer",3]]]],[11,"required_size","","",7,[[["xy",3]],["xy",3]]],[11,"on_event","","",7,[[["event",4]],["eventresult",4]]],[11,"layout","","",7,[[["xy",3]]]],[11,"take_focus","","",7,[[["direction",4]]]],[11,"call_on_any","","",7,[[["fnmut",8],["selector",4]]]],[11,"needs_relayout","","",7,[[]]],[11,"focus_view","","",7,[[["selector",4]],["result",4]]],[11,"important_area","","",7,[[["xy",3]],["rect",3]]],[11,"as_any","","Downcast self to a `Any`.",7,[[],["any",8]]],[11,"as_any_mut","","Downcast self to a mutable `Any`.",7,[[],["any",8]]],[11,"as_boxed_any","","",7,[[["box",3]],[["box",3],["any",8]]]],[11,"as_boxed_view","","",7,[[],[["box",3],["view",8]]]],[11,"from_py","","",7,[[["python",3]]]],[11,"into_py","","",7,[[["python",3]]]],[11,"create","ggpf::game::hashcode_20","",10,[[],[["box",3],["pin",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from_py","","",10,[[["python",3]]]],[11,"into_py","","",10,[[["python",3]]]],[11,"players","","",71,[[],["vec",3]]],[11,"player_after","","",71,[[]]],[11,"turn","","",71,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from_py","","",71,[[["python",3]]]],[11,"into_py","","",71,[[["python",3]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from_py","","",9,[[["python",3]]]],[11,"into_py","","",9,[[["python",3]]]],[11,"from","ggpf::game::meta::simulated","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from_py","","",11,[[["python",3]]]],[11,"into_py","","",11,[[["python",3]]]],[11,"players","","",12,[[],["vec",3]]],[11,"player_after","","",12,[[]]],[11,"turn","","",12,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from_py","","",12,[[["python",3]]]],[11,"into_py","","",12,[[["python",3]]]],[11,"players","ggpf::game::meta::with_history","",13,[[],["vec",3]]],[11,"player_after","","",13,[[]]],[11,"turn","","",13,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from_py","","",13,[[["python",3]]]],[11,"into_py","","",13,[[["python",3]]]],[11,"create","","",14,[[],[["box",3],["pin",3]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from_py","","",14,[[["python",3]]]],[11,"into_py","","",14,[[["python",3]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"call_on","","",15,[[["selector",4]],["option",4]]],[11,"draw","","",15,[[["printer",3]]]],[11,"required_size","","",15,[[["xy",3]],["xy",3]]],[11,"on_event","","",15,[[["event",4]],["eventresult",4]]],[11,"layout","","",15,[[["xy",3]]]],[11,"take_focus","","",15,[[["direction",4]]]],[11,"call_on_any","","",15,[[["fnmut",8],["selector",4]]]],[11,"needs_relayout","","",15,[[]]],[11,"focus_view","","",15,[[["selector",4]],["result",4]]],[11,"important_area","","",15,[[["xy",3]],["rect",3]]],[11,"as_any","","Downcast self to a `Any`.",15,[[],["any",8]]],[11,"as_any_mut","","Downcast self to a mutable `Any`.",15,[[],["any",8]]],[11,"as_boxed_any","","",15,[[["box",3]],[["box",3],["any",8]]]],[11,"as_boxed_view","","",15,[[],[["box",3],["view",8]]]],[11,"from_py","","",15,[[["python",3]]]],[11,"into_py","","",15,[[["python",3]]]],[11,"players","ggpf::game::misere_breakthrough","",16,[[],["vec",3]]],[11,"player_after","","",16,[[]]],[11,"turn","","",16,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from_py","","",16,[[["python",3]]]],[11,"into_py","","",16,[[["python",3]]]],[11,"players","ggpf::game::openai","",18,[[],["vec",3]]],[11,"player_after","","",18,[[]]],[11,"turn","","",18,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from_py","","",18,[[["python",3]]]],[11,"into_py","","",18,[[["python",3]]]],[11,"create","","",17,[[],[["box",3],["pin",3]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from_py","","",17,[[["python",3]]]],[11,"into_py","","",17,[[["python",3]]]],[11,"players","ggpf::game::weak_schur","",72,[[],["vec",3]]],[11,"player_after","","",72,[[]]],[11,"turn","","",72,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from_py","","",72,[[["python",3]]]],[11,"into_py","","",72,[[["python",3]]]],[11,"create","","",73,[[],[["box",3],["pin",3]]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from_py","","",73,[[["python",3]]]],[11,"into_py","","",73,[[["python",3]]]],[11,"from","ggpf::policies::flat","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from_py","","",74,[[["python",3]]]],[11,"into_py","","",74,[[["python",3]]]],[11,"create","","",75,[[],[["multiplayerpolicy",8],["box",3]]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_string","","",75,[[],["string",3]]],[11,"borrow","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from_py","","",75,[[["python",3]]]],[11,"into_py","","",75,[[["python",3]]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from_py","","",76,[[["python",3]]]],[11,"into_py","","",76,[[["python",3]]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from_py","","",77,[[["python",3]]]],[11,"into_py","","",77,[[["python",3]]]],[11,"from","ggpf::policies::mcts","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from_py","","",29,[[["python",3]]]],[11,"into_py","","",29,[[["python",3]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from_py","","",30,[[["python",3]]]],[11,"into_py","","",30,[[["python",3]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from_py","","",31,[[["python",3]]]],[11,"into_py","","",31,[[["python",3]]]],[11,"from","ggpf::policies::mcts::muz","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from_py","","",32,[[["python",3]]]],[11,"into_py","","",32,[[["python",3]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from_py","","",33,[[["python",3]]]],[11,"into_py","","",33,[[["python",3]]]],[11,"create","","",34,[[],[["multiplayerpolicy",8],["box",3]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from_py","","",34,[[["python",3]]]],[11,"into_py","","",34,[[["python",3]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from_py","","",35,[[["python",3]]]],[11,"into_py","","",35,[[["python",3]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from_py","","",36,[[["python",3]]]],[11,"into_py","","",36,[[["python",3]]]],[11,"from","ggpf::policies::mcts::puct","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from_py","","",37,[[["python",3]]]],[11,"into_py","","",37,[[["python",3]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from_py","","",38,[[["python",3]]]],[11,"into_py","","",38,[[["python",3]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from_py","","",39,[[["python",3]]]],[11,"into_py","","",39,[[["python",3]]]],[11,"create","","",40,[[],[["multiplayerpolicy",8],["box",3]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from_py","","",40,[[["python",3]]]],[11,"into_py","","",40,[[["python",3]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from_py","","",41,[[["python",3]]]],[11,"into_py","","",41,[[["python",3]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from_py","","",42,[[["python",3]]]],[11,"into_py","","",42,[[["python",3]]]],[11,"from","ggpf::policies::mcts::rave","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from_py","","",78,[[["python",3]]]],[11,"into_py","","",78,[[["python",3]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from_py","","",79,[[["python",3]]]],[11,"into_py","","",79,[[["python",3]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from_py","","",80,[[["python",3]]]],[11,"into_py","","",80,[[["python",3]]]],[11,"from","ggpf::policies::mcts::uct","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from_py","","",43,[[["python",3]]]],[11,"into_py","","",43,[[["python",3]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from_py","","",44,[[["python",3]]]],[11,"into_py","","",44,[[["python",3]]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from_py","","",81,[[["python",3]]]],[11,"into_py","","",81,[[["python",3]]]],[11,"from","ggpf::policies::nmcs","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from_py","","",82,[[["python",3]]]],[11,"into_py","","",82,[[["python",3]]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from_py","","",83,[[["python",3]]]],[11,"into_py","","",83,[[["python",3]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from_py","","",84,[[["python",3]]]],[11,"into_py","","",84,[[["python",3]]]],[11,"create","","",85,[[],[["multiplayerpolicy",8],["box",3]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"to_string","","",85,[[],["string",3]]],[11,"borrow","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from_py","","",85,[[["python",3]]]],[11,"into_py","","",85,[[["python",3]]]],[11,"from","ggpf::policies::nrpa","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from_py","","",86,[[["python",3]]]],[11,"into_py","","",86,[[["python",3]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from_py","","",46,[[["python",3]]]],[11,"into_py","","",46,[[["python",3]]]],[11,"from","ggpf::policies::ppa","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from_py","","",87,[[["python",3]]]],[11,"into_py","","",87,[[["python",3]]]],[11,"create","","",47,[[],[["multiplayerpolicy",8],["box",3]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from_py","","",47,[[["python",3]]]],[11,"into_py","","",47,[[["python",3]]]],[11,"from","ggpf::settings","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from_py","","",53,[[["python",3]]]],[11,"into_py","","",53,[[["python",3]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from_py","","",54,[[["python",3]]]],[11,"into_py","","",54,[[["python",3]]]],[11,"create","","",55,[[],[["multiplayerpolicy",8],["box",3]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from_py","","",55,[[["python",3]]]],[11,"into_py","","",55,[[["python",3]]]],[11,"create","","",56,[[],[["multiplayerpolicy",8],["box",3]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from_py","","",56,[[["python",3]]]],[11,"into_py","","",56,[[["python",3]]]],[11,"create","","",57,[[],[["multiplayerpolicy",8],["box",3]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from_py","","",57,[[["python",3]]]],[11,"into_py","","",57,[[["python",3]]]],[11,"create","","",58,[[],[["multiplayerpolicy",8],["box",3]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from_py","","",58,[[["python",3]]]],[11,"into_py","","",58,[[["python",3]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from_py","","",59,[[["python",3]]]],[11,"into_py","","",59,[[["python",3]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from_py","","",60,[[["python",3]]]],[11,"into_py","","",60,[[["python",3]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from_py","","",61,[[["python",3]]]],[11,"into_py","","",61,[[["python",3]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from_py","","",62,[[["python",3]]]],[11,"into_py","","",62,[[["python",3]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from_py","","",63,[[["python",3]]]],[11,"into_py","","",63,[[["python",3]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from_py","","",64,[[["python",3]]]],[11,"into_py","","",64,[[["python",3]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"to_string","","",65,[[],["string",3]]],[11,"borrow","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from_py","","",65,[[["python",3]]]],[11,"into_py","","",65,[[["python",3]]]],[11,"as_fail","","",65,[[],["fail",8]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from_py","","",66,[[["python",3]]]],[11,"into_py","","",66,[[["python",3]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from_py","","",69,[[["python",3]]]],[11,"into_py","","",69,[[["python",3]]]],[11,"possible_moves","ggpf::game::breakthrough","",8,[[],["vec",3]]],[11,"is_finished","","",8,[[]]],[11,"possible_moves","ggpf::game::hashcode_20","",71,[[],[["vec",3],["move",4]]]],[11,"possible_moves","ggpf::game::meta::simulated","",12,[[],["vec",3]]],[11,"possible_moves","ggpf::game::meta::with_history","",13,[[],["vec",3]]],[11,"possible_moves","ggpf::game::misere_breakthrough","",16,[[],[["vec",3],["move",3]]]],[11,"possible_moves","ggpf::game::openai","",18,[[],["vec",3]]],[11,"is_finished","","",18,[[]]],[11,"possible_moves","ggpf::game::weak_schur","",72,[[],["vec",3]]],[11,"players","ggpf::game::breakthrough","",8,[[],[["vec",3],["color",4]]]],[11,"player_after","","",8,[[]]],[11,"turn","","",8,[[],["color",4]]],[11,"players","ggpf::game::meta::simulated","",12,[[],["vec",3]]],[11,"player_after","","",12,[[]]],[11,"turn","","",12,[[]]],[11,"players","ggpf::game::meta::with_history","",13,[[],["vec",3]]],[11,"player_after","","",13,[[]]],[11,"turn","","",13,[[]]],[11,"players","ggpf::game::misere_breakthrough","",16,[[],[["vec",3],["color",4]]]],[11,"turn","","",16,[[],["color",4]]],[11,"player_after","","",16,[[]]],[11,"winner","ggpf::game::breakthrough","",8,[[],["option",4]]],[11,"winner","ggpf::game::meta::with_history","",13,[[],["option",4]]],[11,"get_features","ggpf::game::breakthrough","",8,[[]]],[11,"state_dimension","","",8,[[]]],[11,"action_dimension","","",8,[[]]],[11,"state_to_feature","","",8,[[],["array",6]]],[11,"moves_to_feature","","",8,[[["hashmap",3]],["array",6]]],[11,"feature_to_moves","","",8,[[["array",6]],["hashmap",3]]],[11,"all_feature_to_moves","","",8,[[["array",6]],["hashmap",3]]],[11,"all_possible_moves","","",8,[[],["vec",3]]],[11,"get_features","ggpf::game::meta::simulated","",12,[[]]],[11,"state_dimension","","",12,[[]]],[11,"action_dimension","","",12,[[]]],[11,"state_to_feature","","",12,[[],["array",6]]],[11,"moves_to_feature","","",12,[[["hashmap",3]],["array",6]]],[11,"feature_to_moves","","",12,[[["array",6]],["hashmap",3]]],[11,"all_possible_moves","","",12,[[],["vec",3]]],[11,"all_feature_to_moves","","",12,[[["array",6]],["hashmap",3]]],[11,"get_features","ggpf::game::meta::with_history","",13,[[]]],[11,"state_dimension","","",13,[[]]],[11,"action_dimension","","",13,[[]]],[11,"state_to_feature","","",13,[[],["array",6]]],[11,"moves_to_feature","","",13,[[["hashmap",3]],["array",6]]],[11,"feature_to_moves","","",13,[[["array",6]],["hashmap",3]]],[11,"all_feature_to_moves","","",13,[[["array",6]],["hashmap",3]]],[11,"all_possible_moves","","",13,[[],["vec",3]]],[11,"get_features","ggpf::game::openai","",18,[[]]],[11,"state_dimension","","",18,[[]]],[11,"action_dimension","","",18,[[]]],[11,"state_to_feature","","",18,[[],["array",6]]],[11,"all_possible_moves","","",18,[[],["vec",3]]],[11,"moves_to_feature","","",18,[[["hashmap",3]],["array",6]]],[11,"all_feature_to_moves","","",18,[[["array",6]],["hashmap",3]]],[11,"feature_to_moves","","",18,[[["array",6]],["hashmap",3]]],[11,"code","ggpf::game","",70,[[]]],[11,"set_state","ggpf::game::breakthrough::ui","",7,[[]]],[11,"set_state","ggpf::game::meta::with_history","",15,[[]]],[11,"create","ggpf::policies::flat","",75,[[]]],[11,"create","ggpf::settings","",58,[[]]],[11,"create","","",57,[[]]],[11,"create","ggpf::policies::mcts::muz","",34,[[]]],[11,"create","ggpf::policies::mcts::puct","",40,[[],["puctpolicy",6]]],[11,"create","ggpf::settings","",55,[[]]],[11,"create","","",56,[[]]],[11,"create","ggpf::policies::nmcs","",85,[[]]],[11,"create","ggpf::policies::ppa","",47,[[],["ppapolicy",3]]],[11,"create","ggpf::policies::flat","",75,[[]]],[11,"create","ggpf::policies::nmcs","",83,[[]]],[11,"create","ggpf::policies::nrpa","",46,[[]]],[11,"play","ggpf::game::breakthrough","",8,[[["move",3]],[["pin",3],["box",3]]]],[11,"play","ggpf::game::hashcode_20","",71,[[],[["pin",3],["box",3]]]],[11,"play","ggpf::game::meta::simulated","",12,[[],[["pin",3],["box",3]]]],[11,"play","ggpf::game::meta::with_history","",13,[[],[["pin",3],["box",3]]]],[11,"play","ggpf::game::misere_breakthrough","",16,[[["move",3]],[["pin",3],["box",3]]]],[11,"play","ggpf::game::openai","",18,[[],[["pin",3],["box",3]]]],[11,"play","ggpf::game::weak_schur","",72,[[],[["pin",3],["box",3]]]],[11,"create","ggpf::game::breakthrough","",3,[[["color",4]],[["pin",3],["box",3]]]],[11,"create","ggpf::game::meta::with_history","",14,[[],[["box",3],["pin",3]]]],[11,"create","ggpf::game::hashcode_20","",10,[[],[["box",3],["pin",3]]]],[11,"create","ggpf::game::openai","",17,[[],[["pin",3],["box",3]]]],[11,"create","ggpf::game::weak_schur","",73,[[],[["box",3],["pin",3]]]],[11,"get_value","ggpf::policies::mcts::puct","",39,[[]]],[11,"default_move","","",39,[[]]],[11,"default_node","","",39,[[]]],[11,"backpropagate","","",39,[[["rwlock",3],["arc",3]]]],[11,"simulate","","",39,[[],[["pin",3],["box",3]]]],[11,"get_value","ggpf::policies::mcts::rave","",80,[[]]],[11,"default_node","","",80,[[]]],[11,"default_move","","",80,[[]]],[11,"backpropagate","","",80,[[["rwlock",3],["arc",3]]]],[11,"simulate","","",80,[[],[["box",3],["pin",3]]]],[11,"get_value","ggpf::policies::mcts::uct","",81,[[]]],[11,"default_node","","",81,[[]]],[11,"default_move","","",81,[[]]],[11,"backpropagate","","",81,[[["rwlock",3],["arc",3]]]],[11,"simulate","","",81,[[],[["box",3],["pin",3]]]],[11,"play","ggpf::policies::flat","",74,[[["randompolicy",3]],[["pin",3],["box",3]]]],[11,"play","","",76,[[["flatmontecarlopolicy",3]],[["pin",3],["box",3]]]],[11,"play","","",77,[[["flatucbmontecarlopolicy",3]],[["pin",3],["box",3]]]],[11,"play","ggpf::policies::mcts::muz","",32,[[],[["pin",3],["box",3]]]],[11,"play","ggpf::policies::mcts","",31,[[],[["pin",3],["box",3]]]],[11,"play","ggpf::policies::nmcs","",84,[[["multinmcspolicy",3]],[["pin",3],["box",3]]]],[11,"play","ggpf::policies::ppa","",87,[[["ppapolicy",3]],[["pin",3],["box",3]]]],[11,"solve","ggpf::policies::flat","",74,[[["randompolicy",3]],[["box",3],["pin",3]]]],[11,"solve","ggpf::policies::nmcs","",82,[[["nmcspolicy",3]],[["box",3],["pin",3]]]],[11,"solve","ggpf::policies::nrpa","",86,[[["nrpapolicy",3]],[["box",3],["pin",3]]]],[11,"into","ggpf::game::breakthrough","",4,[[]]],[11,"clone","","",4,[[],["color",4]]],[11,"clone","","",5,[[],["cell",4]]],[11,"clone","","",6,[[],["movedirection",4]]],[11,"clone","","",2,[[],["move",3]]],[11,"clone","","",8,[[],["breakthrough",3]]],[11,"clone","","",3,[[],["breakthroughbuilder",3]]],[11,"clone","ggpf::game::hashcode_20","",10,[[],["hashcode20settings",3]]],[11,"clone","","",71,[[],["hashcode20",3]]],[11,"clone","","",9,[[],["move",4]]],[11,"clone","ggpf::game::meta::simulated","",12,[[]]],[11,"clone","ggpf::game::meta::with_history","",13,[[],["withhistory",3]]],[11,"clone","","",14,[[],["withhistorygb",3]]],[11,"clone","ggpf::game::misere_breakthrough","",16,[[],["miserebreakthrough",3]]],[11,"clone","ggpf::game::openai","",18,[[],["gym",3]]],[11,"clone","","",17,[[],["gymbuilder",3]]],[11,"clone","ggpf::game::weak_schur","",72,[[],["weakschurnumber",3]]],[11,"clone","","",73,[[],["weakschurnumberbuilder",3]]],[11,"clone","ggpf::policies::mcts::muz","",33,[[],["muzevaluatorchannels",3]]],[11,"clone","","",34,[[],["muz",3]]],[11,"clone","","",35,[[],["muzeroconfig",3]]],[11,"clone","","",36,[[]]],[11,"clone","ggpf::policies::mcts::puct","",37,[[],["puctmoveinfo",3]]],[11,"clone","","",38,[[],["puctnodeinfo",3]]],[11,"clone","","",39,[[],["puctpolicy_",3]]],[11,"clone","","",40,[[],["puct",3]]],[11,"clone","","",41,[[],["alphazeroconfig",3]]],[11,"clone","","",42,[[]]],[11,"clone","ggpf::policies::mcts::rave","",78,[[],["ravemoveinfo",3]]],[11,"clone","","",79,[[],["ravenodeinfo",3]]],[11,"clone","ggpf::policies::mcts::uct","",43,[[],["uctmoveinfo",3]]],[11,"clone","","",44,[[],["uctnodeinfo",3]]],[11,"clone","ggpf::policies::mcts","",29,[[],["mctstreenode",3]]],[11,"clone","","",30,[[],["mctsnode",3]]],[11,"clone","ggpf::policies::nmcs","",83,[[],["nmcs",3]]],[11,"clone","","",85,[[],["multinmcs",3]]],[11,"clone","ggpf::policies::nrpa","",46,[[]]],[11,"clone","ggpf::policies::ppa","",47,[[]]],[11,"clone","ggpf::settings","",66,[[],["game",4]]],[11,"clone","","",53,[[],["selfplay",3]]],[11,"clone","","",54,[[],["mcts",3]]],[11,"clone","","",55,[[],["rave",3]]],[11,"clone","","",56,[[],["uct",3]]],[11,"clone","","",57,[[],["flatucbmontecarlo",3]]],[11,"clone","","",58,[[],["flatmontecarlo",3]]],[11,"clone","","",59,[[],["ppa",3]]],[11,"clone","","",60,[[],["policies",3]]],[11,"clone","","",61,[[],["puct",3]]],[11,"clone","","",62,[[],["alphazero",3]]],[11,"clone","","",63,[[],["muzero",3]]],[11,"clone","","",64,[[],["config",3]]],[11,"clone","","",65,[[],["strerror",3]]],[11,"default","ggpf::game::breakthrough","",3,[[],["breakthroughbuilder",3]]],[11,"default","ggpf::policies::flat","",75,[[],["random",3]]],[11,"default","ggpf::policies::nmcs","",83,[[],["nmcs",3]]],[11,"default","","",85,[[],["multinmcs",3]]],[11,"default","ggpf::policies::nrpa","",46,[[],["nrpa",3]]],[11,"default","ggpf::settings","",54,[[]]],[11,"default","","",55,[[]]],[11,"default","","",56,[[]]],[11,"default","","",57,[[]]],[11,"default","","",58,[[]]],[11,"default","","",59,[[]]],[11,"default","","",60,[[],["policies",3]]],[11,"eq","ggpf::game::breakthrough","",4,[[["color",4]]]],[11,"eq","","",5,[[["cell",4]]]],[11,"ne","","",5,[[["cell",4]]]],[11,"eq","","",6,[[["movedirection",4]]]],[11,"eq","","",2,[[["move",3]]]],[11,"ne","","",2,[[["move",3]]]],[11,"eq","","",8,[[]]],[11,"eq","ggpf::game::hashcode_20","",9,[[["move",4]]]],[11,"ne","","",9,[[["move",4]]]],[11,"eq","ggpf::game::meta::with_history","",13,[[]]],[11,"eq","ggpf::game::misere_breakthrough","",16,[[["miserebreakthrough",3]]]],[11,"ne","","",16,[[["miserebreakthrough",3]]]],[11,"eq","ggpf::game::weak_schur","",72,[[["weakschurnumber",3]]]],[11,"fmt","ggpf::game::breakthrough","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::game::hashcode_20","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::game::meta::simulated","",12,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::game::meta::with_history","",13,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::game::misere_breakthrough","",16,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::game::openai","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::game::weak_schur","",72,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::policies::mcts::puct","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::policies::mcts::rave","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::policies::mcts::uct","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::policies::mcts","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","ggpf::settings","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::game::breakthrough","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::policies::flat","",75,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::settings","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::policies::mcts::muz","",34,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::policies::mcts::puct","",40,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::settings","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::policies::nmcs","",85,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::policies::ppa","",47,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf::settings","",65,[[["formatter",3]],["result",6]]],[11,"hash","ggpf::game::breakthrough","",4,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",8,[[]]],[11,"hash","ggpf::game::hashcode_20","",9,[[]]],[11,"hash","","",71,[[]]],[11,"hash","ggpf::game::meta::with_history","",13,[[]]],[11,"hash","ggpf::game::weak_schur","",72,[[]]],[11,"source","ggpf::settings","",65,[[],[["option",4],["error",8]]]],[11,"deserialize","","",66,[[],["result",4]]],[11,"deserialize","","",53,[[],["result",4]]],[11,"deserialize","","",54,[[],["result",4]]],[11,"deserialize","","",55,[[],["result",4]]],[11,"deserialize","","",56,[[],["result",4]]],[11,"deserialize","","",57,[[],["result",4]]],[11,"deserialize","","",58,[[],["result",4]]],[11,"deserialize","","",59,[[],["result",4]]],[11,"deserialize","","",60,[[],["result",4]]],[11,"deserialize","","",61,[[],["result",4]]],[11,"deserialize","","",62,[[],["result",4]]],[11,"deserialize","","",63,[[],["result",4]]],[11,"deserialize","","",64,[[],["result",4]]],[11,"draw","ggpf::game::breakthrough::ui","",7,[[["printer",3]]]],[11,"take_focus","","",7,[[["direction",4]]]],[11,"on_event","","",7,[[["event",4]],["eventresult",4]]],[11,"required_size","","",7,[[["vec2",6]],["vec2",6]]],[11,"draw","ggpf::game::meta::with_history","",15,[[["printer",3]]]],[11,"take_focus","","",15,[[["direction",4]]]],[11,"on_event","","",15,[[["event",4]],["eventresult",4]]],[11,"required_size","","",15,[[["vec2",6]],["vec2",6]]]],"p":[[3,"FileManager"],[3,"GameHistoryEntry"],[3,"Move"],[3,"BreakthroughBuilder"],[4,"Color"],[4,"Cell"],[4,"MoveDirection"],[3,"IBreakthrough"],[3,"Breakthrough"],[4,"Move"],[3,"Hashcode20Settings"],[3,"DynamicsNetworkOutput"],[3,"Simulated"],[3,"WithHistory"],[3,"WithHistoryGB"],[3,"IWithHistory"],[3,"MisereBreakthrough"],[3,"GymBuilder"],[3,"Gym"],[8,"Base"],[8,"Playable"],[8,"Game"],[8,"Playout"],[8,"SingleWinner"],[8,"GameBuilder"],[8,"SingleplayerGameBuilder"],[8,"Features"],[8,"MoveCode"],[8,"GameView"],[3,"MCTSTreeNode"],[3,"MCTSNode"],[3,"WithMCTSPolicy"],[3,"MuzPolicy"],[3,"MuzEvaluatorChannels"],[3,"Muz"],[3,"MuZeroConfig"],[3,"MuzEvaluators"],[3,"PUCTMoveInfo"],[3,"PUCTNodeInfo"],[3,"PUCTPolicy_"],[3,"PUCT"],[3,"AlphaZeroConfig"],[3,"AlphaZeroEvaluators"],[3,"UCTMoveInfo"],[3,"UCTNodeInfo"],[8,"BaseMCTSPolicy"],[3,"NRPA"],[3,"PPA"],[8,"MultiplayerPolicy"],[8,"MultiplayerPolicyBuilder"],[8,"DynMultiplayerPolicyBuilder"],[8,"SingleplayerPolicyBuilder"],[8,"SingleplayerPolicy"],[3,"SelfPlay"],[3,"MCTS"],[3,"RAVE"],[3,"UCT"],[3,"FlatUCBMonteCarlo"],[3,"FlatMonteCarlo"],[3,"PPA"],[3,"Policies"],[3,"PUCT"],[3,"AlphaZero"],[3,"MuZero"],[3,"Config"],[3,"StrError"],[4,"Game"],[13,"Breakthrough"],[13,"Gym"],[4,"Method"],[3,"NoFeatures"],[3,"Hashcode20"],[3,"WeakSchurNumber"],[3,"WeakSchurNumberBuilder"],[3,"RandomPolicy"],[3,"Random"],[3,"FlatMonteCarloPolicy"],[3,"FlatUCBMonteCarloPolicy"],[3,"RAVEMoveInfo"],[3,"RAVENodeInfo"],[3,"RAVEPolicy_"],[3,"UCTPolicy_"],[3,"NMCSPolicy"],[3,"NMCS"],[3,"MultiNMCSPolicy"],[3,"MultiNMCS"],[3,"NRPAPolicy"],[3,"PPAPolicy"]]};
searchIndex["ggpf_gym"] = {"doc":"","i":[[3,"BinCodec","ggpf_gym","",null,null],[3,"ServeGymRunner","","",null,null],[3,"GymRunnerClient","","The client stub that makes RPC calls to the server.…",null,null],[4,"GymRunnerRequest","","The request sent over the wire from the client to the…",null,null],[13,"Init","","",0,null],[12,"name","ggpf_gym::GymRunnerRequest","",1,null],[12,"render","","",1,null],[13,"Reset","ggpf_gym","",0,null],[13,"Play","","",0,null],[12,"action","ggpf_gym::GymRunnerRequest","",2,null],[13,"ActionSpace","ggpf_gym","",0,null],[13,"ObservationSpace","","",0,null],[4,"GymRunnerResponse","","The response sent over the wire from the server to the…",null,null],[13,"Init","","",3,null],[13,"Reset","","",3,null],[13,"Play","","",3,null],[13,"ActionSpace","","",3,null],[13,"ObservationSpace","","",3,null],[4,"GymRunnerResponseFut","","A future resolving to a server response.",null,null],[13,"Init","","",4,null],[13,"Reset","","",4,null],[13,"Play","","",4,null],[13,"ActionSpace","","",4,null],[13,"ObservationSpace","","",4,null],[0,"gym","","",null,null],[3,"State","ggpf_gym::gym","",null,null],[12,"observation","","",5,null],[12,"reward","","",5,null],[12,"is_done","","",5,null],[3,"Environment","","",null,null],[3,"GymClient","","",null,null],[4,"GymError","","",null,null],[13,"InvalidAction","","",6,null],[13,"InvalidConversion","","",6,null],[13,"WrongType","","",6,null],[13,"WrongStepResult","","",6,null],[4,"SpaceTemplate","","",null,null],[13,"DISCRETE","","",7,null],[12,"n","ggpf_gym::gym::SpaceTemplate","",8,null],[13,"BOX","ggpf_gym::gym","",7,null],[12,"high","ggpf_gym::gym::SpaceTemplate","",9,null],[12,"low","","",9,null],[12,"shape","","",9,null],[13,"TUPLE","ggpf_gym::gym","",7,null],[12,"spaces","ggpf_gym::gym::SpaceTemplate","",10,null],[4,"SpaceData","ggpf_gym::gym","",null,null],[13,"DISCRETE","","",11,null],[13,"BOX","","",11,null],[13,"TUPLE","","",11,null],[6,"Action","","",null,null],[6,"Observation","","",null,null],[6,"Reward","","",null,null],[11,"get_discrete","","",11,[[],[["result",4],["gymerror",4]]]],[11,"get_box","","",11,[[],[["gymerror",4],["array1",6],["result",4]]]],[11,"get_tuple","","",11,[[],[["array1",6],["result",4],["gymerror",4]]]],[11,"into_pyo","","",11,[[],[["pyobject",3],["result",4],["gymerror",4]]]],[11,"sample","","",7,[[],["spacedata",4]]],[11,"seed","","",12,[[]]],[11,"reset","","",12,[[],[["spacedata",4],["result",4],["gymerror",4]]]],[11,"render","","",12,[[]]],[11,"step","","",12,[[["action",6]],[["state",3],["gymerror",4],["result",4]]]],[11,"close","","",12,[[]]],[11,"action_space","","Returns the number of allowed actions for this environment.",12,[[],["spacetemplate",4]]],[11,"observation_space","","Returns the shape of the observation tensors.",12,[[],["spacetemplate",4]]],[11,"make","","",13,[[],["environment",3]]],[11,"version","","",13,[[]]],[8,"GymRunner","ggpf_gym","",null,null],[16,"InitFut","","The response future returned by init.",14,null],[10,"init","","",14,[[["context",3],["string",3]]]],[16,"ResetFut","","The response future returned by reset.",14,null],[10,"reset","","",14,[[["context",3]]]],[16,"PlayFut","","The response future returned by play.",14,null],[10,"play","","",14,[[["context",3]]]],[16,"ActionSpaceFut","","The response future returned by action_space.",14,null],[10,"action_space","","",14,[[["context",3]]]],[16,"ObservationSpaceFut","","The response future returned by observation_space.",14,null],[10,"observation_space","","",14,[[["context",3]]]],[11,"serve","","Returns a serving function to use with…",14,[[],["servegymrunner",3]]],[11,"new","","Returns a new client stub that sends requests over the…",15,[[["config",3]],[["requestdispatch",3],["newclient",3]]]],[11,"init","","",15,[[["context",3],["string",3]]]],[11,"reset","","",15,[[["context",3]]]],[11,"play","","",15,[[["context",3]]]],[11,"action_space","","",15,[[["context",3]]]],[11,"observation_space","","",15,[[["context",3]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_py","","",16,[[["python",3]]]],[11,"from_py","","",16,[[["python",3]]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_py","","",17,[[["python",3]]]],[11,"from_py","","",17,[[["python",3]]]],[11,"vzip","","",17,[[]]],[11,"serve","","",17,[[["context",3]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_py","","",15,[[["python",3]]]],[11,"from_py","","",15,[[["python",3]]]],[11,"vzip","","",15,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_py","","",0,[[["python",3]]]],[11,"from_py","","",0,[[["python",3]]]],[11,"vzip","","",0,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_py","","",3,[[["python",3]]]],[11,"from_py","","",3,[[["python",3]]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_py","","",4,[[["python",3]]]],[11,"from_py","","",4,[[["python",3]]]],[11,"vzip","","",4,[[]]],[11,"from","ggpf_gym::gym","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_py","","",5,[[["python",3]]]],[11,"from_py","","",5,[[["python",3]]]],[11,"vzip","","",5,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_py","","",12,[[["python",3]]]],[11,"from_py","","",12,[[["python",3]]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_py","","",13,[[["python",3]]]],[11,"from_py","","",13,[[["python",3]]]],[11,"vzip","","",13,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_py","","",6,[[["python",3]]]],[11,"from_py","","",6,[[["python",3]]]],[11,"as_fail","","",6,[[],["fail",8]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_py","","",7,[[["python",3]]]],[11,"from_py","","",7,[[["python",3]]]],[11,"vzip","","",7,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_py","","",11,[[["python",3]]]],[11,"from_py","","",11,[[["python",3]]]],[11,"vzip","","",11,[[]]],[11,"from","ggpf_gym","",15,[[]]],[11,"clone","ggpf_gym::gym","",7,[[],["spacetemplate",4]]],[11,"clone","","",11,[[],["spacedata",4]]],[11,"clone","ggpf_gym","",17,[[],["servegymrunner",3]]],[11,"clone","","",15,[[],["gymrunnerclient",3]]],[11,"default","ggpf_gym::gym","",13,[[]]],[11,"default","ggpf_gym","",16,[[]]],[11,"fmt","ggpf_gym::gym","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf_gym","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","ggpf_gym::gym","",6,[[["formatter",3]],["result",6]]],[11,"poll","ggpf_gym","",4,[[["pin",3],["context",3]],[["poll",4],["gymrunnerresponse",4]]]],[11,"name","ggpf_gym::gym","",6,[[],["option",4]]],[11,"cause","","",6,[[],[["option",4],["fail",8]]]],[11,"backtrace","","",6,[[],[["option",4],["backtrace",3]]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","ggpf_gym","",0,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"deserialize","ggpf_gym::gym","",5,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","ggpf_gym","",0,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"serialize","","",16,[[["pin",3]],[["result",4],["bytes",3]]]],[11,"deserialize","","",16,[[["bytesmut",3],["pin",3]],["result",4]]],[11,"serve","","",17,[[["context",3],["gymrunnerrequest",4]]]]],"p":[[4,"GymRunnerRequest"],[13,"Init"],[13,"Play"],[4,"GymRunnerResponse"],[4,"GymRunnerResponseFut"],[3,"State"],[4,"GymError"],[4,"SpaceTemplate"],[13,"DISCRETE"],[13,"BOX"],[13,"TUPLE"],[4,"SpaceData"],[3,"Environment"],[3,"GymClient"],[8,"GymRunner"],[3,"GymRunnerClient"],[3,"BinCodec"],[3,"ServeGymRunner"]]};
searchIndex["perf"] = {"doc":"PERF - benchmark game generation performance.","i":[[5,"main","perf","Entry point.",null,[[]]],[5,"run","","Run performance test with hardcoded configuration.",null,[[]]],[6,"G","","Game type.",null,null],[17,"MODEL_PATH","","Model location.",null,null],[17,"GPU_BATCH_SIZE","","Batch size per evaluator.",null,null],[17,"N_GENERATORS","","Number of game generators per evaluator.",null,null],[17,"N_EVALUATORS","","Number of evaluators.",null,null]],"p":[]};
searchIndex["ui"] = {"doc":"UI - terminal user interface to visualize tree exploration…","i":[[3,"TreeEntry","ui","Entry for the tree view.",null,null],[12,"name","","",0,null],[12,"state","","",0,null],[12,"probability","","",0,null],[12,"value","","",0,null],[12,"N_visits","","",0,null],[12,"reward","","",0,null],[3,"GuiEventSender","","Communication channel from Simulator to GUI.",null,null],[12,"f","","Channel sender.",1,null],[3,"GameDuelUI","","Interface for game matches.",null,null],[12,"siv","","Cursive instance.",2,null],[12,"_gv","","Storing game view and game types.",2,null],[4,"GuiToSimChannel","","Communication type from GUI to Simulator.",null,null],[13,"Next","","Play next move",3,null],[5,"expand_tree","","Expand the tree view by looking for the children and…",null,[[["treeview",3]]]],[5,"event_loop_alpha","","AlphaZero event loop, managing the game instance.",null,[[["puct",3],["receiver",3],["guieventsender",3],["guitosimchannel",4]]]],[5,"event_loop_muz","","MuZero event loop, managing the game instance.",null,[[["receiver",3],["guieventsender",3],["muz",3],["guitosimchannel",4]]]],[5,"run_cursive","","Dispatch cursive instance according to the chosen method.",null,[[["method",4],["config",3]]]],[5,"run_gym","","Use MuZero with remote Gym.",null,[[["gymbuilder",3],["method",4],["config",3]]]],[5,"main","","Entry point.",null,[[],[["result",4],["box",3]]]],[6,"Result","","",null,null],[11,"send","","Send a closure that will remotely mutate the GUI.",1,[[]]],[11,"new","","Create a new UI manager given the cursive instance.",2,[[["cursive",3]]]],[11,"new_state","","Update game state.",2,[[]]],[11,"new_policy_tree","","Update policy tree state.",2,[[["arc",3],["rwlock",3]]]],[11,"render","","Render layout by creating views and adding them to cursive.",2,[[["sender",3],["guitosimchannel",4]],["guieventsender",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from_py","","",0,[[["python",3]]]],[11,"into_py","","",0,[[["python",3]]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from_py","","",1,[[["python",3]]]],[11,"into_py","","",1,[[["python",3]]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from_py","","",2,[[["python",3]]]],[11,"into_py","","",2,[[["python",3]]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from_py","","",3,[[["python",3]]]],[11,"into_py","","",3,[[["python",3]]]],[11,"vzip","","",3,[[]]],[11,"clone","","",0,[[],["treeentry",3]]],[11,"clone","","",3,[[],["guitosimchannel",4]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"TreeEntry"],[3,"GuiEventSender"],[3,"GameDuelUI"],[4,"GuiToSimChannel"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);